image: docker/compose:latest

services:
- docker:dind

stages:
- test
- deploy
- security

# Gitlab Tools
include:
- template: Jobs/SAST.gitlab-ci.yml
- template: Jobs/Dependency-Scanning.gitlab-ci.yml
- template: Security/Secret-Detection.gitlab-ci.yml
- template: Jobs/Container-Scanning.gitlab-ci.yml

# Unit Test Stage
java:
  stage: test
  allow_failure: true
  script:
    - mvn verify
  artifacts:
    when: always
    reports:
      junit:
        - target/surefire-reports/TEST-*.xml
        - target/failsafe-reports/TEST-*.xml

# Static Application Security Testing (SAST) Stage
sast:
  stage: test
  tags:
  - sast-runner
  artifacts:
    name: sast
    paths:
    - gl-sast-report.json
    reports:
      sast: gl-sast-report.json
    when: always

# Software Composition Analysis (SCA) Stage
gemnasium-maven-dependency_scanning:
  stage: test
  tags:
  - sca-runner
  rules:
  - if: $CI_COMMIT_BRANCH == "main"
  - if: "$CI_MERGE_REQUEST_IID"

# Secret Scanning Stage
secret_detection:
  stage: test
  tags:
    - secret-runner

# Container Scanning Stage 
container_scanning:
  stage: test
  tags:
    - container-scan-runner
  variables:
    CS_IMAGE: springcommunity/spring-framework-petclinic

# Deploy app using docker
deploy-job:
  stage: deploy
  script:
  - docker-compose --profile mysql up -d
  after_script:
  - docker ps
  rules:
  - if: $CI_COMMIT_BRANCH == "main"


# Dynamic Application Security Testing (DAST) Stage
dast-job:
  stage: security
  script:
  - echo "Attacking $DAST_TARGET_URL ..."
  - wget -q https://github.com/zaproxy/zaproxy/releases/download/v2.14.0/ZAP_2.14.0_Linux.tar.gz
  - tar -xf ZAP_2.14.0_Linux.tar.gz
  - cd ZAP_2.14.0
  - "./zap.sh -cmd -quickurl 'http://localhost:7500' -quickprogress -port 8066
    -quickout ../zap_report.html"
  - cd ..
  artifacts:
    paths:
    - zap_report.html

# Port Scan Stage
port-scan-job:
  stage: security
  script:
    - nmap -p- localhost
